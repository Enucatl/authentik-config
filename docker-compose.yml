---
version: '3.4'

services:

  postgresql:
    image: postgres:12-alpine
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    networks:
      - traefik_proxy
    volumes:
      - database:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${AUTHENTIK_POSTGRESQL__PASSWORD}
      - POSTGRES_USER=${AUTHENTIK_POSTGRESQL__USER}
      - POSTGRES_DB=${AUTHENTIK_POSTGRESQL__NAME}

  redis:
    image: redis:alpine
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    networks:
      - traefik_proxy

  server:
    image: ${AUTHENTIK_IMAGE:-ghcr.io/goauthentik/server}:${AUTHENTIK_TAG:-2022.8.2}
    restart: unless-stopped
    command: server
    environment:
      - AUTHENTIK_REDIS__HOST=redis
      - AUTHENTIK_POSTGRESQL__HOST=postgresql
      - AUTHENTIK_ERROR_REPORTING__ENABLED
      - AUTHENTIK_SECRET_KEY
      - AUTHENTIK_EMAIL__HOST
      - AUTHENTIK_EMAIL__PORT
      - AUTHENTIK_EMAIL__FROM
      - AUTHENTIK_DISABLE_UPDATE_CHECK
      - AUTHENTIK_DISABLE_STARTUP_ANALYTICS
      - AUTHENTIK_AVATARS
      - AUTHENTIK_POSTGRESQL__USER
      - AUTHENTIK_POSTGRESQL__NAME
      - AUTHENTIK_POSTGRESQL__PASSWORD
    volumes:
      - media:/media
      - custom-templates:/templates
    ports:
      - "0.0.0.0:${AUTHENTIK_PORT_HTTP:-9000}:9000"
      - "0.0.0.0:${AUTHENTIK_PORT_HTTPS:-9443}:9443"
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.authentik.rule=Host(`authentik.nuc10i7fnh.home.arpa`)"
      - "traefik.http.routers.authentik.entrypoints=https"
      - "traefik.http.routers.authentik.tls=true"
      ## Individual Application forwardAuth regex (catch any subdomain using individual application forwardAuth)  
      - "traefik.http.routers.authentik-outpost.rule=HostRegexp(`{subdomain:[a-z0-9-]+}.nuc10i7fnh.home.arpa`) && PathPrefix(`/outpost.goauthentik.io/`)"
      - "traefik.http.routers.authentik-outpost.entrypoints=https"
      - "traefik.http.routers.authentik-outpost.tls=true"
      ## HTTP Services
      - "traefik.http.routers.authentik.service=authentik"
      - "traefik.http.services.authentik.loadBalancer.server.port=9000"

  worker:
    image: ${AUTHENTIK_IMAGE:-ghcr.io/goauthentik/server}:${AUTHENTIK_TAG:-2022.8.2}
    restart: unless-stopped
    command: worker
    environment:
      - AUTHENTIK_REDIS__HOST=redis
      - AUTHENTIK_POSTGRESQL__HOST=postgresql
      - AUTHENTIK_ERROR_REPORTING__ENABLED
      - AUTHENTIK_SECRET_KEY
      - AUTHENTIK_EMAIL__HOST
      - AUTHENTIK_EMAIL__PORT
      - AUTHENTIK_EMAIL__FROM
      - AUTHENTIK_DISABLE_UPDATE_CHECK
      - AUTHENTIK_DISABLE_STARTUP_ANALYTICS
      - AUTHENTIK_AVATARS
      - AUTHENTIK_POSTGRESQL__USER
      - AUTHENTIK_POSTGRESQL__NAME
      - AUTHENTIK_POSTGRESQL__PASSWORD
    # This is optional, and can be removed. If you remove this, the following will happen
    # - The permissions for the /media folders aren't fixed, so make sure they are 1000:1000
    # - The docker socket can't be accessed anymore
    #user: root
    volumes:
      - media:/media
      - /home/user/docker/traefik/data/certs/authentik.nuc10i7fnh.home.arpa/:/certs/authentik.nuc10i7fnh.home.arpa
    networks:
      - traefik_proxy

  ldap:
    image: ghcr.io/goauthentik/ldap
    networks:
       - traefik_proxy
    ports:
        #- 389:3389
        - 636:6636
    environment:
      - AUTHENTIK_HOST=https://authentik.nuc10i7fnh.home.arpa
      - AUTHENTIK_INSECURE=true
      - AUTHENTIK_TOKEN

volumes:
  database:
  media:
  custom-templates:

networks:
  traefik_proxy:
    external: true
